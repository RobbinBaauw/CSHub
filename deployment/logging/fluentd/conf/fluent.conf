<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<filter docker.cshub-server docker.cshub-traefik docker.cshub-kibana docker.cshub-client docker.cshub-dev-client docker.cshub-dev-server>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type json
  </parse>
</filter>

<filter docker.cshub-server docker.cshub-traefik docker.cshub-kibana docker.cshub-client docker.cshub-dev-client docker.cshub-dev-server>
  @type record_transformer
  remove_keys log
  enable_ruby
  <record>
    @timestamp ${ require 'time'; Time.now.utc.iso8601(3) }
  </record>
</filter>

<filter docker.cshub-traefik> 
  @type geoip

  # Specify the field which has the ip to geoip-lookup
  geoip_lookup_keys ClientHost

  # Specify the database to user
  geoip2_database /geo2.mmdb
  
  # Specify backend to use
  backend_library geoip2_c

  <record>
    city            ${city.names.en["ClientHost"]}
    lat             ${location.latitude["ClientHost"]}
    lon             ${location.longitude["ClientHost"]}
    country         ${country.iso_code["ClientHost"]}
    #country_name    ${country_names.en["ClientHost"]}
    postal_code     ${postal.code["ClientHost"]}
    geoip	    '{"location":[${location.longitude["ClientHost"]},${location.latitude["ClientHost"]}]}'
  </record>

  @log_level debug
  skip_adding_null_record true
</filter>

<match docker.*>
  @type elasticsearch
  host 192.168.0.113
  port 9200
  index_name fluentd.${tag}
  type_name fluentd
  flush_thread_count 2
  flush_interval 5
</match>
